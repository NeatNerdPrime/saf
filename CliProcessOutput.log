==================== Delta Process =====================
Date: 2024-10-07T03:47:21.122Z
Provide the necessary information:
  Required flag - Input execution/profile (list of controls the delta is being applied from) JSON file
  Required flag - The XCCDF XML file containing the new guidance - in the form of .xml file
  Required flag - The output folder for the updated profile (will contain the controls that delta was applied too)
  Optional flag - The OVAL XML file containing definitions used in the new guidance - in the form of .xml file
  Optional flag - Output markdown report file - must have an extension of .md
  Optional flag - Control ID Types: ['rule', 'group', 'cis', 'version']
  Optional flag - Run the approximate string matching process
  Optional flag - The InSpec profile directory containing the controls being updated (controls Delta is processing)

Process Flags ============================================
inspecJsonFile=D:\2-SourceCode\InsPec\InSpec_Profiles\Profiles_Code\MS-IIS\microsoft-iis-10.0-site-stig-baseline\profile.json
xccdfXmlFile=D:\2-SourceCode\InsPec\InSpec_Profiles\Profiles_Code\MS-IIS\10.0\U_MS_IIS_10-0_Site_V2R9_Manual_STIG\U_MS_IIS_10-0_Site_STIG_V2R9_Manual-xccdf.xml
deltaOutputDir=D:\2-SourceCode\InsPec\InSpec_Profiles\Profiles_Code\MS-IIS\microsoft-iis-10.0-site-stig-baseline\new_controls
reportDirectory=D:\2-SourceCode\InsPec\InSpec_Profiles\Profiles_Code\MS-IIS\microsoft-iis-8.5-site-stig-baseline
reportFileName=deltaProcessReport.md
idType=rule
Update Results ===========================================================================

## Automatic Update:  -> 

### New Controls:


### Updated Check/Fixes:
#### Checks:
<details open>
  <summary>Click to expand.</summary>
</details>

#### Fixes:
<details open>
  <summary>Click to expand.</summary>
</details>

### Updated Impacts
<details open>
  <summary>Click to expand.</summary>
SV-218735:
Old: 0
New: 0.5
---
SV-218736:
Old: 0
New: 0.5
---
SV-218737:
Old: 0
New: 0.5
---
SV-218738:
Old: 0
New: 0.5
---
SV-218739:
Old: 0
New: 0.5
---
SV-218741:
Old: 0
New: 0.5
---
SV-218742:
Old: 0
New: 0.5
---
SV-218743:
Old: 0
New: 0.5
---
SV-218744:
Old: 0
New: 0.5
---
SV-218745:
Old: 0
New: 0.5
---
SV-218749:
Old: 0
New: 0.5
---
SV-218750:
Old: 0
New: 0.7
---
SV-218751:
Old: 0
New: 0.5
---
SV-218752:
Old: 0
New: 0.5
---
SV-218753:
Old: 0
New: 0.5
---
SV-218754:
Old: 0
New: 0.5
---
SV-218755:
Old: 0
New: 0.5
---
SV-218756:
Old: 0
New: 0.5
---
SV-218757:
Old: 0
New: 0.5
---
SV-218758:
Old: 0
New: 0.5
---
SV-218759:
Old: 0
New: 0.5
---
SV-218760:
Old: 0
New: 0.5
---
SV-218761:
Old: 0
New: 0.5
---
SV-218762:
Old: 0
New: 0.5
---
SV-218763:
Old: 0
New: 0.5
---
SV-218765:
Old: 0
New: 0.5
---
SV-218768:
Old: 0
New: 0.5
---
SV-218769:
Old: 0
New: 0.5
---
SV-218770:
Old: 0
New: 0.5
---
SV-218772:
Old: 0
New: 0.5
---
SV-218775:
Old: 0
New: 0.5
---
SV-218777:
Old: 0
New: 0.5
---
SV-218778:
Old: 0
New: 0.5
---
SV-218781:
Old: 0
New: 0.5
---
</details>

### Updated Titles
<details>
  <summary>Click to expand.</summary>
</details>

### Updated Descriptions
<details>
  <summary>Click to expand.</summary>
SV-218735:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
When the session information is stored on the client, the session ID, along with the user authorization and identity information, is sent along with each client request and is either stored in a cookie, embedded in the uniform resource locator (URL), or placed in a hidden field on the displayed form. Each of these offers advantages and disadvantages. The biggest disadvantage to all three is the hijacking of a session along with all of the user's credentials.

When the user authorization and identity information is stored on the server in a protected and encrypted database, the communication between the client and web server will only send the session identifier, and the server can then retrieve user credentials for the session when needed. If, during transmission, the session were to be hijacked, the user's credentials would not be compromised.

ASP.NET provides a session state, which is available as the HttpSessionState class, as a method of storing session-specific information that is visible only within the session. ASP.NET session state identifies requests from the same browser during a limited time window as a session, and provides the ability to persist variable values for the duration of that session.

```
---
SV-218736:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
When the session information is stored on the client, the session ID, along with the user authorization and identity information, is sent along with each client request and is stored in either a cookie, embedded in the uniform resource locator (URL), or placed in a hidden field on the displayed form. Each of these offers advantages and disadvantages. The biggest disadvantage to all three is the hijacking of a session along with all of the user's credentials.

When the user authorization and identity information is stored on the server in a protected and encrypted database, the communication between the client and website will only send the session identifier, and the server can then retrieve user credentials for the session when needed. If, during transmission, the session were to be hijacked, the user's credentials would not be compromised.

ASP.NET provides a session state, which is available as the HttpSessionState class, as a method of storing session-specific information visible only within the session. ASP.NET session state identifies requests from the same browser during a limited time window as a session and provides the ability to persist variable values for the duration of that session.

When using the URI mode for cookie settings under session state, IIS will reject and reissue session IDs that do not have active sessions. Configuring IIS to expire session IDs and regenerate tokens gives a potential attacker less time to capture a cookie and gain access to server content.

```
---
SV-218737:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Transport Layer Security (TLS) encryption is a required security setting for a private web server. Encryption of private information is essential to ensuring data confidentiality. If private information is not encrypted, it can be intercepted and easily read by an unauthorized party. A private web server must use a FIPS 140-2-approved TLS version, and all non-FIPS-approved SSL versions must be disabled.

NIST SP 800-52 specifies the preferred configurations for government systems.

```
---
SV-218738:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Transport Layer Security (TLS) encryption is a required security setting for a private web server. Encryption of private information is essential to ensuring data confidentiality. If private information is not encrypted, it can be intercepted and easily read by an unauthorized party. A private web server must use a FIPS 140-2-approved TLS version, and all non-FIPS-approved SSL versions must be disabled.

NIST SP 800-52 specifies the preferred configurations for government systems.

```
---
SV-218739:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Internet Information Services (IIS) on Windows Server 2012 provides basic logging capabilities. However, because IIS takes some time to flush logs to disk, administrators do not have access to logging information in real-time. In addition, text-based log files can be difficult and time-consuming to process.

In IIS 10.0, the administrator has the option of sending logging information to Event Tracing for Windows (ETW). This option gives the administrator the ability to use standard query tools, or create custom tools, for viewing real-time logging information in ETW. This provides a significant advantage over parsing text-based log files that are not updated in real time.



```
---
SV-218741:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Web server logging capability is critical for accurate forensic analysis. Without sufficient and accurate information, a correct replay of the events cannot be determined.

Ascertaining the success or failure of an event is important during forensic analysis. Correctly determining the outcome will add information to the overall reconstruction of the loggable event. By determining the success or failure of the event correctly, analysis of the enterprise can be undertaken to determine if events tied to the event occurred in other areas within the enterprise.

Without sufficient information establishing the success or failure of the logged event, investigation into the cause of event is severely hindered. The success or failure also provides a means to measure the impact of an event and help authorized personnel to determine the appropriate response. Log record content that may be necessary to satisfy the requirement of this control includes, but is not limited to, time stamps, source and destination IP addresses, user/process identifiers, event descriptions, application-specific events, success/fail indications, file names involved, access control, or flow control rules invoked.

```
---
SV-218742:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Web server logging capability is critical for accurate forensic analysis. Without sufficient and accurate information, a correct replay of the events cannot be determined.

Determining user accounts, processes running on behalf of the user, and running process identifiers also enable a better understanding of the overall event. User tool identification is also helpful to determine if events are related to overall user access or specific client tools.

Log record content that may be necessary to satisfy the requirement of this control includes: time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

```
---
SV-218743:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Controlling what a user of a hosted application can access is part of the security posture of the web server. Any time a user can access more functionality than is needed for the operation of the hosted application poses a security issue. A user with too much access can view information that is not needed for the user's job role, or could use the function in an unintentional manner.

A MIME tells the web server what type of program various file types and extensions are and what external utilities or programs are needed to execute the file type.

A shell is a program that serves as the basic interface between the user and the operating system, so hosted application users must not have access to these programs. Shell programs may execute shell escapes and can then perform unauthorized activities that could damage the security posture of the web server.

```
---
SV-218744:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
IIS 10.0 will either allow or deny script execution based on file extension. The ability to control script execution is controlled through two features with IIS 10.0, Request Filtering and Handler Mappings.

For Handler Mappings, the ISSO must document and approve all allowable file extensions the website allows (white list) and denies (black list). The white list and black list will be compared to the Handler Mappings in IIS 8. Handler Mappings at the site level take precedence over Handler Mappings at the server level.

```
---
SV-218745:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
IIS 10.0 will either allow or deny script execution based on file extension. The ability to control script execution is controlled through two features with IIS 10.0, Request Filtering and Handler Mappings.

For Request Filtering, the ISSO must document and approve all allowable file extensions the website allows (white list) and denies (black list) by the website. The white list and black list will be compared to the Request Filtering in IIS 10.0. Request Filtering at the site level take precedence over Request Filtering at the server level.

```
---
SV-218749:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
A DoD private website must use PKI as an authentication mechanism for web users. Information systems residing behind web servers requiring authorization based on individual identity must use the identity provided by certificate-based authentication to support access control decisions. Not using client certificates allows an attacker unauthenticated access to private websites.



```
---
SV-218750:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Many of the security problems that occur are not the result of a user gaining access to files or data for which the user does not have permissions, but rather users are assigned incorrect permissions to unauthorized data. The files, directories, and data stored on the web server must be evaluated and a determination made concerning authorized access to information and programs on the server. Only authorized users and administrative accounts will be allowed on the host server in order to maintain the web server, applications, and review the server operations.

```
---
SV-218751:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Communication between a client and the web server is done using the HTTP protocol, but HTTP is a stateless protocol. To maintain a connection or session, a web server will generate a session identifier (ID) for each client session when the session is initiated. The session ID allows the web server to track a user session and, in many cases, the user, if the user previously logged into a hosted application.

By being able to guess session IDs, an attacker can easily perform a man-in-the-middle attack. To truly generate random session identifiers that cannot be reproduced, the web server session ID generator, when used twice with the same input criteria, must generate an unrelated random ID.

The session ID generator must be a FIPS 140-2-approved generator.

```
---
SV-218752:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
The content database is accessed by multiple anonymous users when the web server is in production. By locating the content database on the same partition as the web server system file, the risk for unauthorized access to these protected files is increased. Additionally, having the content database path on the same drive as the system folders also increases the potential for a drive space exhaustion attack.

```
---
SV-218753:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Request filtering replaces URLScan in IIS, enabling administrators to create a more granular rule set with which to allow or reject inbound web content. By setting limits on web requests, it helps to ensure availability of web services and may also help mitigate the risk of buffer overflow type attacks. The MaxURL Request Filter limits the number of bytes the server will accept in a URL.

```
---
SV-218754:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
By setting limits on web requests, it ensures availability of web services and mitigates the risk of buffer overflow type attacks. The maxAllowedContentLength Request Filter limits the number of bytes the server will accept in a request.

```
---
SV-218755:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Setting limits on web requests helps to ensure availability of web services and may also help mitigate the risk of buffer overflow type attacks. The Maximum Query String Request Filter describes the upper limit on allowable query string lengths. Upon exceeding the configured value, IIS will generate a Status Code 404.15.

```
---
SV-218756:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Setting limits on web requests ensures availability of web services and mitigates the risk of buffer overflow type attacks. The allow high-bit characters Request Filter enables rejection of requests containing non-ASCII characters.

```
---
SV-218757:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Request filtering enables administrators to create a more granular rule set with which to allow or reject inbound web content. Setting limits on web requests ensures availability of web services and mitigates the risk of buffer overflow type attacks. When the "Allow double escaping" option is disabled, it prevents attacks that rely on double-encoded requests.

```
---
SV-218758:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Request filtering enables administrators to create a more granular rule set to allow or reject inbound web content. Setting limits on web requests helps to ensure availability of web services and may also help mitigate the risk of buffer overflow type attacks. The allow unlisted property of the "File Extensions Request" filter enables rejection of requests containing specific file extensions not defined in the "File Extensions" filter. Tripping this filter will cause IIS to generate a Status Code 404.7.

```
---
SV-218759:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Directory browsing allows the contents of a directory to be displayed upon request from a web client. If directory browsing is enabled for a directory in IIS, users could receive a web page listing the contents of the directory. If directory browsing is enabled the risk of inadvertently disclosing sensitive content is increased.

```
---
SV-218760:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
HTTP error pages contain information that could enable an attacker to gain access to an information system. Failure to prevent the sending of HTTP error pages with full information to remote requesters exposes internal configuration information to potential attackers.

```
---
SV-218761:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Setting compilation debug to false ensures detailed error information does not inadvertently display during live application usage, mitigating the risk of application information being displayed to users.

```
---
SV-218762:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
The idle time-out attribute controls the amount of time a worker process will remain idle before it shuts down. A worker process is idle if it is not processing requests and no new requests are received.

The purpose of this attribute is to conserve system resources; the default value for idle time-out is 20 minutes.

By default, the World Wide Web (WWW) service establishes an overlapped recycle, in which the worker process to be shut down is kept running until after a new worker process is started.

```
---
SV-218763:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
Leaving sessions open indefinitely is a major security risk. An attacker can easily use an already authenticated session to access the hosted application as the previously authenticated user. By closing sessions after a set period of inactivity, the web server can make certain that those sessions that are not closed through the user logging out of an application are eventually closed.

Acceptable values are 5 minutes for high-value applications, 10 minutes for medium-value applications, and 15 minutes for low-value applications.

```
---
SV-218765:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
To make certain the logging mechanism used by the web server has sufficient storage capacity in which to write the logs, the logging mechanism must be able to allocate log record storage capacity.

The task of allocating log record storage capacity is usually performed during initial installation of the logging mechanism. The system administrator will usually coordinate the allocation of physical drive space with the web server administrator along with the physical location of the partition and disk. Refer to NIST SP 800-92 for specific requirements on log rotation and storage dependent on the impact of the web server.

```
---
SV-218768:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
TLS encryption is a required security setting for a private web server. Encryption of private information is essential to ensuring data confidentiality. If private information is not encrypted, it can be intercepted and easily read by an unauthorized party. A private web server must use a FIPS 140-2-approved TLS version, and all non-FIPS-approved SSL versions must be disabled.

NIST SP 800-52 specifies the preferred configurations for government systems.

```
---
SV-218769:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
The HTTP protocol is a stateless protocol. To maintain a session, a session identifier is used. The session identifier is a piece of data used to identify a session and a user. If the session identifier is compromised by an attacker, the session can be hijacked. By encrypting the session identifier, the identifier becomes more difficult for an attacker to hijack, decrypt, and use before the session has expired.

```
---
SV-218770:
Old:
```
There are no IIS sites configured hence the control is Not-Applicable

```
New:
```
A cookie can be read by client-side scripts easily if cookie properties are not set properly. By allowing cookies to be read by the client-side scripts, information such as session identifiers could be compromised and used by an attacker who intercepts the cookie. Setting cookie properties (i.e., HttpOnly property) to disallow client-side scripts from reading cookies better protects the information inside the cookie.



```
---
SV-218772:
Old:
```
There are no application pool configured hence the control is Not-Applicable

```
New:
```
IIS application pools can be periodically recycled to avoid unstable states possibly leading to application crashes, hangs, or memory leaks. By default, application pool recycling is overlapped, which means the worker process to be shut down is kept running until after a new worker process is started. After a new worker process starts, new requests are passed to it. The old worker process shuts down after it finishes processing its existing requests, or after a configured time-out, whichever comes first. This way of recycling ensures uninterrupted service to clients.

```
---
SV-218775:
Old:
```
There are no application pool configured hence the control is Not-Applicable

```
New:
```
Application pools can be periodically recycled to avoid unstable states possibly leading to application crashes, hangs, or memory leaks.

```
---
SV-218777:
Old:
```
There are no application pool configured hence the control is Not-Applicable

```
New:
```
Rapid fail protection is a feature that interrogates the health of worker processes associated with websites and web applications. It can be configured to perform a number of actions such as shutting down and restarting worker processes that have reached failure thresholds. By not setting rapid fail protection, the web server could become unstable in the event of a worker process crash potentially leaving the web server unusable.

```
---
SV-218778:
Old:
```
There are no application pool configured hence the control is Not-Applicable

```
New:
```
Windows Process Activation Service (WAS) manages application pool configuration and may flag a worker process as unhealthy and shut it down. The rapid fail protection must be set to a suitable value. A lack of response from the worker process might mean the worker process does not have a thread to respond to the ping request, or that it is hanging for some other reason. The ping interval and ping response time may need adjustment to gain access to timely information about application pool health without triggering false, unhealthy conditions.

```
---
SV-218781:
Old:
```
CgiMowdule not installed hence the control not applicable

```
New:
```
Copies of backup files will not execute on the server, but they can be read by the anonymous user if special precautions are not taken. Such backup copies contain the same sensitive information as the actual script being executed and, as such, are useful to malicious users. Techniques and systems exist today to search web servers for such files and are able to exploit the information contained in them.

```
---
</details>
